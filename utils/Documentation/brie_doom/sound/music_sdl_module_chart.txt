class
	MUSIC_SDL_MODULE

General
	cluster: sound
	description: 
		"chocolate doom i_sdlmusic.c
		System interface for music."
	create: make

Ancestors
	EXECUTION_ENVIRONMENT
	MUSIC_MODULE_T*

Queries
	Arguments: ARGUMENTS_32 -- (from EXECUTION_ENVIRONMENT)
	available_cpu_count: NATURAL_32 -- (from EXECUTION_ENVIRONMENT)
	current_music_volume: INTEGER_32
	current_working_path: PATH -- (from EXECUTION_ENVIRONMENT)
	Default_shell: STRING_32 -- (from EXECUTION_ENVIRONMENT)
	Home_directory_path: detachable PATH -- (from EXECUTION_ENVIRONMENT)
	init: BOOLEAN
	is_mid (mem: MANAGED_POINTER): BOOLEAN
	item (s: READABLE_STRING_GENERAL): detachable STRING_32 -- (from EXECUTION_ENVIRONMENT)
	Maxmidlength: INTEGER_32
	music_initialized: BOOLEAN
	music_is_playing: BOOLEAN
	Music_sdl_module (a_i_main: [like i_main] I_MAIN): MUSIC_SDL_MODULE
	musicpaused: BOOLEAN
	registersong (data: MANAGED_POINTER; len: INTEGER_32): detachable MIX_MUSIC_STRUCT_API
	return_code: INTEGER_32 -- (from EXECUTION_ENVIRONMENT)
	Root_directory_name: STRING_8 -- (from EXECUTION_ENVIRONMENT)
	sdl_is_initialized: BOOLEAN
	sdl_was_initialized: BOOLEAN
	Sound_devices: ARRAY [INTEGER_32]
	starting_environment: HASH_TABLE [STRING_32, STRING_32] -- (from EXECUTION_ENVIRONMENT)
	Temporary_directory_path: detachable PATH -- (from EXECUTION_ENVIRONMENT)
	User_directory_path: detachable PATH -- (from EXECUTION_ENVIRONMENT)

Commands
	change_working_path (path: PATH) -- (from EXECUTION_ENVIRONMENT)
	convertmus (musdata: MANAGED_POINTER; len: INTEGER_32; filename: STRING_8)
	launch (s: READABLE_STRING_GENERAL) -- (from EXECUTION_ENVIRONMENT)
	pause_music
	playsong (a_handle: MIX_MUSIC_STRUCT_API; looping: BOOLEAN)
	poll
	put (value, key: READABLE_STRING_GENERAL) -- (from EXECUTION_ENVIRONMENT)
	resumemusic
	set_music_volume (vol: INTEGER_32)
	shutdown
	sleep (nanoseconds: INTEGER_64) -- (from EXECUTION_ENVIRONMENT)
	stopsong
	system (s: READABLE_STRING_GENERAL) -- (from EXECUTION_ENVIRONMENT)
	unregistersong (handle: detachable MIX_MUSIC_STRUCT_API)
	updatemusicvolume

