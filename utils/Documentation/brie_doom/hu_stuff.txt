note
	description: "[
		hu_stuff.c
		Heads-up displays
	]"

class 
	HU_STUFF

create 
	make

feature 

	i_main: I_MAIN

	make (a_i_main: like i_main)
		do
			i_main := a_i_main
			create w_message.make
			create w_chat.make
			create w_title.make
		end
	
feature 

	Player_names: ARRAY [STRING_8]
		once
			create Result.make_filled ("", 0, 4)
			Result [0] := {D_ENGLSH}.hustr_plrgreen
			Result [1] := {D_ENGLSH}.hustr_plrindigo
			Result [2] := {D_ENGLSH}.hustr_plrbrown
			Result [3] := {D_ENGLSH}.hustr_plrred
		ensure
				Result.lower = 0
			instance_free: class
		end
	
feature 

	hu_init
		do
		end
	
feature 

	w_message: HU_STEXT_T

	w_chat: HU_ITEXT_T

	w_title: HU_TEXTLINE_T
	
feature 

	Queuesize: INTEGER_32 = 128

	Chatchars: ARRAY [CHARACTER_8]
		once
			create Result.make_filled ((0).to_character_8, 0, Queuesize - 1)
		end

	head: INTEGER_32

	tail: INTEGER_32

	hu_dequeuechatchar: CHARACTER_8
		do
			if head /= tail then
				Result := Chatchars [tail]
				tail := (tail + 1) & (Queuesize - 1)
			else
				Result := (0).to_character_8
			end
		end
	
feature 

	hu_drawer
		do
		end

	hu_erase
		do
			i_main.Hu_lib.hulib_erasestext (w_message)
			i_main.Hu_lib.hulib_eraseitext (w_chat)
			i_main.Hu_lib.hulib_erasetextline (w_title)
		end
	
feature 

	hu_responder (ev: EVENT_T): BOOLEAN
		do
		end
	
feature 

	hu_start
		do
		end
	
feature 

	hu_ticker
		do
		end
	
end -- class HU_STUFF
