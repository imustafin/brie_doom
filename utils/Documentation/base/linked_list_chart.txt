class
	LINKED_LIST [G]

General
	cluster: elks
	description: "Sequential, one-way linked lists"
	create: make, make_from_iterable

Ancestors
	DYNAMIC_LIST* [G]

Queries
	after: BOOLEAN
	at alias "@" (i: INTEGER_32): [like item] G -- (from CHAIN)
	before: BOOLEAN
	changeable_comparison_criterion: BOOLEAN -- (from CONTAINER)
	count: INTEGER_32
	cursor: LINKED_LIST_CURSOR [G]
	exhausted: BOOLEAN -- (from LINEAR)
	extendible: BOOLEAN -- (from DYNAMIC_CHAIN)
	first: [like item] G
	for_all (test: FUNCTION [G, BOOLEAN]): BOOLEAN -- (from LINEAR)
	Full: BOOLEAN
	has (v: [like item] G): BOOLEAN -- (from CHAIN)
	i_th alias "[]" (i: INTEGER_32): [like item] G -- (from CHAIN)
	index: INTEGER_32
	index_of (v: [like item] G; i: INTEGER_32): INTEGER_32 -- (from CHAIN)
	is_empty: BOOLEAN -- (from FINITE)
	is_equal (other: [like Current] LINKED_LIST [G]): BOOLEAN -- (from LIST)
	is_inserted (v: G): BOOLEAN
	isfirst: BOOLEAN
	islast: BOOLEAN
	item: G
	item_for_iteration: G -- (from LINEAR)
	last: [like item] G
	linear_representation: LINEAR [G] -- (from LINEAR)
	Lower: INTEGER_32 -- (from CHAIN)
	new_cursor: LINKED_LIST_ITERATION_CURSOR [G]
	object_comparison: BOOLEAN -- (from CONTAINER)
	occurrences (v: [like item] G): INTEGER_32 -- (from CHAIN)
	off: BOOLEAN
	prunable: BOOLEAN -- (from DYNAMIC_CHAIN)
	readable: BOOLEAN
	replaceable: BOOLEAN -- (from ACTIVE)
	there_exists (test: FUNCTION [G, BOOLEAN]): BOOLEAN -- (from LINEAR)
	valid_cursor (p: CURSOR): BOOLEAN
	valid_cursor_index (i: INTEGER_32): BOOLEAN -- (from CHAIN)
	valid_index (i: INTEGER_32): BOOLEAN -- (from CHAIN)
	writable: BOOLEAN -- (from SEQUENCE)

Commands
	append (s: SEQUENCE [G]) -- (from CHAIN)
	back
	compare_objects -- (from CONTAINER)
	compare_references -- (from CONTAINER)
	copy (other: [like Current] LINKED_LIST [G])
	do_all (action: PROCEDURE [G]) -- (from LINEAR)
	do_if (action: PROCEDURE [G]; test: FUNCTION [G, BOOLEAN]) -- (from LINEAR)
	extend (v: [like item] G)
	fill (other: CONTAINER [G]) -- (from CHAIN)
	finish
	force (v: [like item] G) -- (from SEQUENCE)
	forth
	go_i_th (i: INTEGER_32)
	go_to (p: CURSOR)
	merge_left (other: [like Current] LINKED_LIST [G])
	merge_right (other: [like Current] LINKED_LIST [G])
	move (i: INTEGER_32)
	prune (v: [like item] G) -- (from DYNAMIC_CHAIN)
	prune_all (v: [like item] G) -- (from DYNAMIC_CHAIN)
	put (v: [like item] G) -- (from CHAIN)
	put_front (v: [like item] G)
	put_i_th (v: [like item] G; i: INTEGER_32) -- (from CHAIN)
	put_left (v: [like item] G)
	put_right (v: [like item] G)
	remove
	remove_left
	remove_right
	replace (v: [like item] G)
	search (v: [like item] G) -- (from BILINEAR)
	sequence_put (v: [like item] G) -- (from SEQUENCE)
	start
	swap (i: INTEGER_32) -- (from CHAIN)
	wipe_out

Constraints
	prunable
	empty constraint
	not void unless empty
	before constraint
	after constraint

