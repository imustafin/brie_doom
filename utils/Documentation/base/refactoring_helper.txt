note
	description: "[
		Collection of features that are used to mark
		places in code that needs refactoring.
	]"
	library: "Free implementation of ELKS library"
	status: "See notice at end of class."
	legal: "See notice at end of class."
	date: "$Date: 2018-04-28 20:47:11 +0000 (Sat, 28 Apr 2018) $"
	revision: "$Revision: 101695 $"

class 
	REFACTORING_HELPER

create 
	default_create

feature -- Markers

	fixme (comment: STRING_8)
			-- Mark code that has to be "fixed" with `comment`.
		require
			comment_not_void: comment /= Void
		do
			debug ("refactor_fixme")
				Io.Error.put_string ("FIXME: ")
				Io.Error.put_string (comment)
				Io.Error.put_new_line
			end
		ensure
			instance_free: class
		end

	to_implement (comment: STRING_8)
			-- Mark code that has to be "implemented" with `comment`.
		require
			comment_not_void: comment /= Void
		do
			debug ("refactor_fixme")
				Io.Error.put_string ("TO_BE_IMPLEMENTED: ")
				Io.Error.put_string (comment)
				Io.Error.put_new_line
			end
		ensure
			instance_free: class
		end

	to_implement_assertion (comment: STRING_8): BOOLEAN
			-- Mark assertion that has to be "implemented" with `comment`.
		require
			comment_not_void: comment /= Void
		do
			debug ("refactor_fixme")
				Io.Error.put_string ("ASSERTION_TO_BE_IMPLEMENTED: ")
				Io.Error.put_string (comment)
				Io.Error.put_new_line
			end
			Result := True
		ensure
			instance_free: class
		end
	
note
	copyright: "Copyright (c) 1984-2018, Eiffel Software and others"
	license: "Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
		Eiffel Software
		5949 Hollister Ave., Goleta, CA 93117 USA
		Telephone 805-685-1006, Fax 805-685-6869
		Website http://www.eiffel.com
		Customer support http://support.eiffel.com
	]"

end -- class REFACTORING_HELPER
