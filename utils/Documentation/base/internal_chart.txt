class
	INTERNAL

General
	cluster: elks
	description: 
		"Access to internal object properties.
		This class may be used as ancestor by classes needing its facilities."

Ancestors
	OBJECT_GRAPH_MARKER
	REFLECTOR

Queries
	attached_type (type_id: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	Bit_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	boolean_field (i: INTEGER_32; object: ANY): BOOLEAN
	Boolean_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	character_32_field (i: INTEGER_32; object: ANY): CHARACTER_32
	Character_32_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	character_8_field (i: INTEGER_32; object: ANY): CHARACTER_8
	Character_8_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	character_field (i: INTEGER_32; object: ANY): CHARACTER_8
	Character_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	class_name (object: ANY): STRING_8
	class_name_of_type (type_id: INTEGER_32): STRING_8 -- (from REFLECTOR)
	compiler_version: INTEGER_32 -- (from REFLECTOR)
	deep_physical_size (object: ANY): INTEGER_32
	deep_physical_size_64 (object: ANY): NATURAL_64
	detachable_type (type_id: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	double_field (i: INTEGER_32; object: ANY): REAL_64
	Double_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	dynamic_type (object: separate ANY): INTEGER_32
	dynamic_type_from_string (class_type: READABLE_STRING_GENERAL): INTEGER_32 -- (from REFLECTOR)
	Expanded_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	field (i: INTEGER_32; object: ANY): detachable ANY
	field_conforms_to (a_source_type, a_field_type: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	field_count (object: ANY): INTEGER_32
	field_count_of_type (type_id: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	field_name (i: INTEGER_32; object: ANY): STRING_8
	field_name_of_type (i, type_id: INTEGER_32): STRING_8 -- (from REFLECTOR)
	field_offset (i: INTEGER_32; object: ANY): INTEGER_32
	field_static_type_of_type (i, type_id: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	field_type (i: INTEGER_32; object: ANY): INTEGER_32
	field_type_of_type (i, type_id: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	generic_count (obj: ANY): INTEGER_32
	generic_count_of_type (type_id: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	generic_dynamic_type (obj: ANY; i: INTEGER_32): INTEGER_32
	generic_dynamic_type_of_type (type_id, i: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	integer_16_field (i: INTEGER_32; object: ANY): INTEGER_16
	Integer_16_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	integer_32_field (i: INTEGER_32; object: ANY): INTEGER_32
	Integer_32_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	integer_64_field (i: INTEGER_32; object: ANY): INTEGER_64
	Integer_64_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	integer_8_field (i: INTEGER_32; object: ANY): INTEGER_8
	Integer_8_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	integer_field (i: INTEGER_32; object: ANY): INTEGER_32
	Integer_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	is_attached_type (a_type_id: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	is_field_expanded (i: INTEGER_32; object: ANY): BOOLEAN
	is_field_expanded_of_type (i, a_type_id: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	is_field_transient (i: INTEGER_32; object: ANY): BOOLEAN
	is_field_transient_of_type (i, a_type_id: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	is_instance_of (object: ANY; type_id: INTEGER_32): BOOLEAN
	is_marked (obj: separate ANY): BOOLEAN -- (from OBJECT_GRAPH_MARKER)
	is_pre_ecma_mapping_disabled: BOOLEAN -- (from REFLECTOR_HELPER)
	is_special (object: ANY): BOOLEAN
	is_special_any_type (type_id: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	is_special_type (type_id: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	is_tuple (object: ANY): BOOLEAN
	is_tuple_type (type_id: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	is_valid_type_string (s: READABLE_STRING_GENERAL): BOOLEAN -- (from REFLECTOR_HELPER)
	mapped_type (a_type: READABLE_STRING_GENERAL): READABLE_STRING_GENERAL -- (from REFLECTOR_HELPER)
	Max_predefined_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	Min_predefined_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	natural_16_field (i: INTEGER_32; object: ANY): NATURAL_16
	Natural_16_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	natural_32_field (i: INTEGER_32; object: ANY): NATURAL_32
	Natural_32_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	natural_64_field (i: INTEGER_32; object: ANY): NATURAL_64
	Natural_64_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	natural_8_field (i: INTEGER_32; object: ANY): NATURAL_8
	Natural_8_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	new_instance_of (type_id: INTEGER_32): ANY -- (from REFLECTOR)
	new_special_any_instance (type_id, a_capacity: INTEGER_32): SPECIAL [detachable ANY] -- (from REFLECTOR)
	new_tuple_from_special (type_id: INTEGER_32; values: SPECIAL [detachable separate ANY]): detachable TUPLE -- (from REFLECTOR)
	new_tuple_from_tuple (type_id: INTEGER_32; source: separate TUPLE): detachable TUPLE -- (from REFLECTOR)
	None_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	persistent_field_count (object: ANY): INTEGER_32
	persistent_field_count_of_type (a_type_id: INTEGER_32): INTEGER_32 -- (from REFLECTOR)
	physical_size (object: ANY): INTEGER_32
	physical_size_64 (object: separate ANY): NATURAL_64
	pointer_field (i: INTEGER_32; object: ANY): POINTER
	Pointer_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	real_32_field (i: INTEGER_32; object: ANY): REAL_32
	Real_32_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	real_64_field (i: INTEGER_32; object: ANY): REAL_64
	Real_64_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	real_field (i: INTEGER_32; object: ANY): REAL_32
	Real_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	reference_field (i: INTEGER_32; object: ANY): detachable ANY
	Reference_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)
	storable_version_of_type (a_type_id: INTEGER_32): detachable IMMUTABLE_STRING_8 -- (from REFLECTOR)
	type_conforms_to (type1, type2: INTEGER_32): BOOLEAN -- (from REFLECTOR)
	type_name (object: ANY): STRING_8
	type_name_of_type (type_id: INTEGER_32): STRING_8 -- (from REFLECTOR)
	type_of (object: detachable ANY): TYPE [detachable ANY]
	type_of_type (type_id: INTEGER_32): TYPE [detachable ANY] -- (from REFLECTOR)
	Wide_character_type: INTEGER_32 -- (from REFLECTOR_CONSTANTS)

Commands
	lock_marking -- (from OBJECT_GRAPH_MARKER)
	mark (obj: separate ANY) -- (from OBJECT_GRAPH_MARKER)
	set_boolean_field (i: INTEGER_32; object: ANY; value: BOOLEAN)
	set_character_32_field (i: INTEGER_32; object: ANY; value: CHARACTER_32)
	set_character_8_field (i: INTEGER_32; object: ANY; value: CHARACTER_8)
	set_character_field (i: INTEGER_32; object: ANY; value: CHARACTER_8)
	set_double_field (i: INTEGER_32; object: ANY; value: REAL_64)
	set_integer_16_field (i: INTEGER_32; object: ANY; value: INTEGER_16)
	set_integer_32_field (i: INTEGER_32; object: ANY; value: INTEGER_32)
	set_integer_64_field (i: INTEGER_32; object: ANY; value: INTEGER_64)
	set_integer_8_field (i: INTEGER_32; object: ANY; value: INTEGER_8)
	set_integer_field (i: INTEGER_32; object: ANY; value: INTEGER_32)
	set_natural_16_field (i: INTEGER_32; object: ANY; value: NATURAL_16)
	set_natural_32_field (i: INTEGER_32; object: ANY; value: NATURAL_32)
	set_natural_64_field (i: INTEGER_32; object: ANY; value: NATURAL_64)
	set_natural_8_field (i: INTEGER_32; object: ANY; value: NATURAL_8)
	set_pointer_field (i: INTEGER_32; object: ANY; value: POINTER)
	set_real_32_field (i: INTEGER_32; object: ANY; value: REAL_32)
	set_real_64_field (i: INTEGER_32; object: ANY; value: REAL_64)
	set_real_field (i: INTEGER_32; object: ANY; value: REAL_32)
	set_reference_field (i: INTEGER_32; object: ANY; value: detachable ANY)
	unlock_marking -- (from OBJECT_GRAPH_MARKER)
	unmark (obj: separate ANY) -- (from OBJECT_GRAPH_MARKER)

