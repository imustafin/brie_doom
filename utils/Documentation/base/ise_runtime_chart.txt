class
	ISE_RUNTIME

General
	cluster: elks
	description: 
		"Set of features to access ISE runtime functionality.
		To be used at your own risk.
		Interface may changed without notice."

Ancestors
	ANY

Queries
	attached_type (a_type_id: INTEGER_32): INTEGER_32
	boolean_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): BOOLEAN
	boolean_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): BOOLEAN
	character_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): CHARACTER_32
	character_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): CHARACTER_32
	character_8_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): CHARACTER_8
	character_8_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): CHARACTER_8
	check_assert (b: BOOLEAN): BOOLEAN
	compiler_version: INTEGER_32
	detachable_type (a_type_id: INTEGER_32): INTEGER_32
	dynamic_type (object: separate ANY): INTEGER_32
	dynamic_type_at_offset (a_enclosing: POINTER; a_physical_offset: INTEGER_32): INTEGER_32
	eif_gen_param_id (a_type_id, i: INTEGER_32): INTEGER_32
	field_count_of_type (a_type_id: INTEGER_32): INTEGER_32
	field_name_of_type (i, a_type_id: INTEGER_32): POINTER
	field_offset_of_type (i, a_type_id: INTEGER_32): INTEGER_32
	field_static_type_of_type (i, a_type_id: INTEGER_32): INTEGER_32
	field_type_of_type (i, a_type_id: INTEGER_32): INTEGER_32
	generating_type_of_type (a_type_id: INTEGER_32): STRING_8
	generator_of_type (a_type_id: INTEGER_32): STRING_8
	generic_parameter_count (a_type_id: INTEGER_32): INTEGER_32
	in_assertion: BOOLEAN
	integer_16_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_16
	integer_16_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_16
	integer_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_32
	integer_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_32
	integer_64_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_64
	integer_64_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_64
	integer_8_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_8
	integer_8_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): INTEGER_8
	is_attached_type (a_type_id: INTEGER_32): BOOLEAN
	is_copy_semantics_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): BOOLEAN
	is_expanded (a_object: POINTER): BOOLEAN
	is_field_expanded_of_type (i, a_type_id: INTEGER_32): BOOLEAN
	is_field_transient_of_type (i, a_type_id: INTEGER_32): BOOLEAN
	is_object_marked (obj: POINTER): BOOLEAN
	is_special (a_object: POINTER): BOOLEAN
	is_special_copy_semantics_item (i: INTEGER_32; a_object: POINTER): BOOLEAN
	is_special_of_expanded (a_object: POINTER): BOOLEAN
	is_special_of_reference (a_object: POINTER): BOOLEAN
	is_tuple (object: POINTER): BOOLEAN
	natural_16_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_16
	natural_16_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_16
	natural_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_32
	natural_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_32
	natural_64_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_64
	natural_64_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_64
	natural_8_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_8
	natural_8_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): NATURAL_8
	object_size (a_object: POINTER): NATURAL_64
	once_objects (a_result_type_id: INTEGER_32): SPECIAL [ANY]
	persistent_field_count_of_type (a_type_id: INTEGER_32): INTEGER_32
	pointer_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): POINTER
	pointer_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): POINTER
	pre_ecma_mapping_status: BOOLEAN
	raw_reference_field_at_offset (a_enclosing: POINTER; a_physical_offset: INTEGER_32): POINTER
	real_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): REAL_32
	real_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): REAL_32
	real_64_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): REAL_64
	real_64_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): REAL_64
	reference_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): detachable ANY
	reference_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32): detachable ANY
	reference_field_at_offset (a_enclosing: POINTER; a_physical_offset: INTEGER_32): ANY
	storable_version_of_type (a_type_id: INTEGER_32): detachable STRING_8
	type_conforms_to (a_type_id_1, a_type_id_2: INTEGER_32): BOOLEAN
	type_id_from_name (s: POINTER): INTEGER_32

Commands
	lock_marking
	mark_object (obj: POINTER)
	set_boolean_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: BOOLEAN)
	set_boolean_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: BOOLEAN)
	set_character_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: CHARACTER_32)
	set_character_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: CHARACTER_32)
	set_character_8_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: CHARACTER_8)
	set_character_8_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: CHARACTER_8)
	set_integer_16_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: INTEGER_16)
	set_integer_16_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: INTEGER_16)
	set_integer_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset, value: INTEGER_32)
	set_integer_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset, value: INTEGER_32)
	set_integer_64_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: INTEGER_64)
	set_integer_64_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: INTEGER_64)
	set_integer_8_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: INTEGER_8)
	set_integer_8_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: INTEGER_8)
	set_natural_16_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_16)
	set_natural_16_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_16)
	set_natural_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_32)
	set_natural_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_32)
	set_natural_64_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_64)
	set_natural_64_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_64)
	set_natural_8_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_8)
	set_natural_8_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: NATURAL_8)
	set_pointer_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: POINTER)
	set_pointer_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: POINTER)
	set_pre_ecma_mapping (v: BOOLEAN)
	set_real_32_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: REAL_32)
	set_real_32_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: REAL_32)
	set_real_64_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: REAL_64)
	set_real_64_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: REAL_64)
	set_reference_field (i: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: detachable ANY)
	set_reference_field_at (field_offset: INTEGER_32; a_object: POINTER; a_physical_offset: INTEGER_32; value: detachable ANY)
	unlock_marking
	unmark_object (obj: POINTER)

